<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:ApplManga.Resources"
    xmlns:viewModels="clr-namespace:ApplManga.ViewModels">

    <DropShadowEffect
        x:Key="z-depth3"
        BlurRadius="14"
        Direction="0"
        ShadowDepth="4.5"
        Color="#80BBBBBB" />

    <BooleanToVisibilityConverter x:Key="boolToVisibiltyConverter" />

    <SolidColorBrush x:Key="MetroFGBrush" Color="#FF7A7A7A" />
    <SolidColorBrush x:Key="MetroHighlightBrush" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="MetroSelectedBrush" Color="#FFCCCCCC" />
    <SolidColorBrush x:Key="MetroButtonCloseBrush" Color="#FFE81123" />

    <SolidColorBrush x:Key="TabContentBGBrush" Color="#FFF7F7F7" />
    <SolidColorBrush x:Key="TabControlBGBrush" Color="White" />
    <SolidColorBrush x:Key="TabItemPanelBGBrush" Color="{DynamicResource Gray8}" />
    <SolidColorBrush x:Key="TabItemIsMouseOverBGBrush" Color="#40FF4D0A" />
    <SolidColorBrush x:Key="TabItemIsMouseOverFGBrush" Color="OrangeRed" />
    <SolidColorBrush x:Key="TabItemIsNotSelectedFGBrush" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="TabItemIsSelectedBGBrush" Color="{DynamicResource Gray2}" />
    <SolidColorBrush x:Key="TabItemIsSelectedFGBrush" Color="Black" />
    <SolidColorBrush x:Key="TabItemSelectorBrush" Color="OrangeRed" />

    <!-- METRO BUTTON STYLE -->
    <ControlTemplate x:Key="MetroBaseButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="{TemplateBinding Background}">
            <ContentPresenter
                x:Name="BaseButtonContentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource MetroFGBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="{StaticResource MetroFGBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MetroSelectedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BaseButtonContentPresenter" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- DEFAULT TITLE BAR BUTTON STYLE -->
    <Style x:Key="MetroWindowButtonDefaultStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="{StaticResource MetroHighlightBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource MetroBaseButtonTemplate}" />
    </Style>

    <!-- FOR CLOSE BUTTON ONLY -->
    <Style
        x:Key="MetroWindowButtonCloseStyle"
        BasedOn="{StaticResource MetroWindowButtonDefaultStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource MetroButtonCloseBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="BaseButtonContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="{StaticResource MetroFGBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFF1707A" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BaseButtonContentPresenter" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- METRO BUTTON TEXTBLOCK DEFAULT STYLE -->
    <Style x:Key="MetroButtonTextBlockDefaultStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <!-- WINDOW TEMPLATE -->
    <Style x:Key="MetroWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{StaticResource MetroFGBrush}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border
                        Name="MetroWindowBorder"
                        Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}"
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <Border BorderThickness="0">
                                <AdornerDecorator>
                                    <Grid x:Name="MetroTitleBarLayoutRoot">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="36" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="15" />
                                        </Grid.RowDefinitions>
                                        <ContentPresenter
                                            Grid.Row="1"
                                            Grid.RowSpan="2"
                                            Margin="7" />
                                        <Rectangle
                                            x:Name="MetroHeaderBG"
                                            Grid.Row="0"
                                            Height="36"
                                            VerticalAlignment="Top"
                                            Fill="{TemplateBinding Background}" />
                                        <StackPanel
                                            Grid.Row="0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            Orientation="Horizontal"
                                            WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Button
                                                x:Name="MinimizeWindowButton"
                                                Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}"
                                                Style="{StaticResource MetroWindowButtonDefaultStyle}"
                                                ToolTip="Minimize">
                                                <Button.Content>
                                                    <Grid Width="46" Height="36">
                                                        <TextBlock
                                                            Padding="0,10,0,0"
                                                            Style="{StaticResource MetroButtonTextBlockDefaultStyle}"
                                                            Text="&#59681;" />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                            <Grid Margin="1,0,1,0">
                                                <Button
                                                    x:Name="RestoreWindowButton"
                                                    Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}"
                                                    Style="{StaticResource MetroWindowButtonDefaultStyle}"
                                                    ToolTip="Restore Down"
                                                    Visibility="Collapsed">
                                                    <Button.Content>
                                                        <Grid Width="46" Height="36">
                                                            <TextBlock Style="{StaticResource MetroButtonTextBlockDefaultStyle}" Text="&#59683;" />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                                <Button
                                                    x:Name="MaximizeWindowButton"
                                                    Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}"
                                                    Style="{StaticResource MetroWindowButtonDefaultStyle}"
                                                    ToolTip="Maximize">
                                                    <Button.Content>
                                                        <Grid Width="46" Height="36">
                                                            <TextBlock Style="{StaticResource MetroButtonTextBlockDefaultStyle}" Text="&#59682;" />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                            </Grid>
                                            <Button
                                                x:Name="CloseWindowButton"
                                                Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}"
                                                Style="{StaticResource MetroWindowButtonCloseStyle}"
                                                ToolTip="Close">
                                                <Button.Content>
                                                    <Grid Width="46" Height="36">
                                                        <TextBlock Style="{StaticResource MetroButtonTextBlockDefaultStyle}" Text="&#59540;" />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>
                                        <TextBlock
                                            x:Name="MetroWindowTitleTextBlock"
                                            Grid.Row="0"
                                            Margin="8,-1,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            FontSize="{TemplateBinding FontSize}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Text="{TemplateBinding Title}"
                                            TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                </AdornerDecorator>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="MaximizeWindowButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RestoreWindowButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="MaximizeWindowButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RestoreWindowButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MetroTitleBarLayoutRoot" Property="Margin" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CornerRadius="0"
                    GlassFrameThickness="0"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- GRID TEMPLATE -->
    <Style x:Key="GridDefaultStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource TabContentBGBrush}" />
    </Style>

    <!-- RECTANGLE TEMPLATE -->
    <Style x:Key="RectangleDefaultStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="White" />
    </Style>

    <!-- TABCONTROL TEMPLATE -->
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource TabControlBGBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ContentTemplate" Value="{DynamicResource TabItemContentTemplate}" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource TabItemStyle}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel LastChildFill="True">
                        <Grid
                            x:Name="HeaderGrid"
                            Background="{StaticResource TabItemPanelBGBrush}"
                            DockPanel.Dock="Left">
                            <TabPanel
                                x:Name="HeaderPanel"
                                HorizontalAlignment="Left"
                                Panel.ZIndex="1"
                                Background="White"
                                IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1" />
                            <Border
                                x:Name="ContentPanel"
                                Background="{StaticResource TabContentBGBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter
                                    x:Name="PART_SelectedContentHost"
                                    Margin="{TemplateBinding Padding}"
                                    ContentSource="SelectedContent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    UseLayoutRounding="False" />
                            </Border>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderGrid" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TABITEM TEMPLATE -->
    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="Roboto-Light.ttf#Roboto" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0,12,0,12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid
                        x:Name="TAB_Grid"
                        Margin="0"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="150" />
                        </Grid.ColumnDefinitions>
                        <iconPacks:PackIconOcticons
                            Grid.Column="0"
                            Margin="20,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Kind="{Binding TabIcon}" />
                        <ContentPresenter
                            x:Name="TAB_HeaderContent"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Left"
                            ContentSource="Header"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Rectangle
                            x:Name="TAB_Selector"
                            Width="4"
                            HorizontalAlignment="Left"
                            Fill="{StaticResource TabItemSelectorBrush}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Trigger.Setters>
                                <Setter Property="Foreground" Value="{StaticResource TabItemIsNotSelectedFGBrush}" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.Setters>
                                <Setter Property="Foreground" Value="{StaticResource TabItemIsSelectedFGBrush}" />
                                <Setter TargetName="TAB_Selector" Property="Visibility" Value="Visible" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger SourceName="TAB_Grid" Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter Property="Background" Value="{StaticResource TabItemIsMouseOverBGBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource TabItemIsMouseOverFGBrush}" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TABCONTENT TEMPLATE -->
    <DataTemplate x:Key="TabItemContentTemplate" DataType="{x:Type viewModels:ItemTabsViewModel}">
        <Grid
            Grid.Row="0"
            Margin="200,0,0,0"
            RenderOptions.ClearTypeHint="Enabled"
            TextOptions.TextFormattingMode="Display">
            <TextBlock
                Margin="15,0,0,0"
                FontSize="36"
                FontWeight="Bold"
                Foreground="{DynamicResource GrayBrush6}"
                Text="{Binding TabCaption, StringFormat='{}{0} content'}" />
        </Grid>
    </DataTemplate>
</ResourceDictionary>